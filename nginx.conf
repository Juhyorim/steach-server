# Nginx의 기본 이벤트 설정 블록입니다. 이 예시에서는 비어 있지만, 보통 최대 연결 수 등 이벤트 처리와 관련된 설정을 포함합니다.
events { }

# 요청 속도 제한을 정의하는 영역을 설정합니다.
# limit_req_zone 지시문을 사용하여 요청 속도 제한을 설정합니다.
# 여기서는 mylimit이라는 이름으로 10MB의 메모리를 사용하여 IP 주소별로 초당 (1)개의 요청을 허용하도록 설정합니다.
# limit_req 지시문을 사용하여 요청이 과도할 경우 버스트(burst) 허용치를 설정합니다.
# 여기서는 한 번에 최대 3개의 요청을 추가로 허용합니다.
# 밖에 두면 location 블록 내의 모든 요청에 대해 적용

# limit_req_zone 지시어만 사용: 요청 속도 제한을 위한 공유 메모리 영역을 정의하지만, 실제로 요청 속도 제한이 적용되지는 않습니다.
# limit_req 지시어는 반드시 limit_req_zone 지시어와 함께 사용해야 합니다.

# 각 클라이언트 IP 주소별로 초당 1개의 요청을 허용하도록 제한하는 설정입니다.
# 즉, 모든 IP 주소에 대해 각각 별도로 요청 속도를 제한합니다.
# $binary_remote_addr: 클라이언트의 IP 주소를 이진 형식으로 저장합니다.
                       # 모든 클라이언트 IP 주소를 기준으로 요청을 제한하는 설정입니다.
                       # 모든 IP 주소에 대해 설정이 적용됩니다.
#                   [이름]   [키]:주로 client ip   [공유 메모리 영역의 이름:memsize]  [rate: 초당 허용할 요청 수]
# limit_req_zone  $binary_remote_addr zone=mylimit:10m rate=3r/s;

# HTTP 서버 관련 설정을 포함합니다. 여러 server 블록을 포함할 수 있으며, 각 server 블록은 하나의 가상 서버를 정의합니다.
http {
    log_format custom_log_format '$remote_addr - $remote_user [$time_local] "$request" '
                                 'limit_req_status=$limit_req_status $status '
                                 '"$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log custom_log_format;

    upstream app {
        server app:18080; # steach-server 애플리케이션이 사용할 포트 설정
    }

    access_log /var/log/nginx/access.log custom_log_format;

    limit_req_zone $binary_remote_addr zone=ip_limit:10m rate=5r/s;

# 로그 설정


    server {
        listen 80; # Nginx가 요청을 받을 포트 설정
        location / {
            proxy_pass http://app; # 요청을 steach-server 애플리케이션으로 전달
            proxy_set_header Host $host; # 원본 호스트 헤더 전달
            proxy_set_header X-Real-IP $remote_addr; # 클라이언트의 IP 주소 전달
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 프록시를 통한 클라이언트 IP 주소 전달
            proxy_set_header X-Forwarded-Proto $scheme; # 요청의 프로토콜 전달
        }

        # 각 클라이언트 IP 주소별로 /api/v1/lectures/final/ 경로로 들어오는 요청 속도를 제한
        # /api/v1/lectures/final/ 경로에 대한 요청을 처리합니다 (/api/v1/lectures/final/ ) 기능
        # location /api/v1/lectures/final 는  (/api/v1/lectures/final ) 가능.

        # 이제 503 대신 429(too many request) 에러를 반환한다.
        location /api/v1/lectures/final/ {
            #       [이름] [순간 추가 허용 요청 허용 개수] [적용 기술:nodelay, delay]
            limit_req zone=ip_limit burst=1 nodelay; # 요청 속도 제한을 적용합니다

            # 상속 적용이 안됨.
            proxy_pass http://app; # 요청을 steach-server 애플리케이션으로 전달
            proxy_set_header Host $host; # 원본 호스트 헤더 전달
            proxy_set_header X-Real-IP $remote_addr; # 클라이언트의 IP 주소 전달
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 프록시를 통한 클라이언트 IP 주소 전달
            proxy_set_header X-Forwarded-Proto $scheme; # 요청의 프로토콜 전달
        }

        # 테스트 속성
        # 작동하기 전에 테스트를 한번해주는 거 같다. uri 잘못 설정하니까 에러 나드라.
        location /api/v1/login {
            limit_req zone=ip_limit burst=1 nodelay; # 요청 속도 제한을 적용합니다

            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

# location /your_url {
#         limit_req zone=one burst=5 nodelay;
#         ...
#     }


# # 특정 IP 주소에 대한 요청 제한 영역 정의
# limit_req_zone $binary_remote_addr zone=special_limit:10m rate=2r/s;
#
# # 특정 IP 주소에 대해 특별한 요청 제한을 적용하는 geo 지시어 설정
# geo $limit {
#     default default_limit; # 기본적으로 default_limit 영역을 사용
#     192.168.1.100 special_limit; # 192.168.1.100 IP 주소에 대해 special_limit 영역을 사용
# }

# location에서 아래 처럼사용
# limit_req zone=$limit burst=5 nodelay;

