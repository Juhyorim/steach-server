plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.7'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'jacoco'
    id "org.sonarqube" version "5.0.0.4638"
//    id "org.sonarqube" version "3.5.0.2730"
}

group = 'com.twentyone'
version = '0.0.1-SNAPSHOT'
ext.jacocoDir = "$buildDir/customJacocoReportDir"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok:' // 테스트 컴파일 타임에 Lombok 사용
    testAnnotationProcessor 'org.projectlombok:lombok:' // 테스트 주석 처리기 추가
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    //swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Mongo DB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // cache
//    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // 처리율 제한 기능

    // controller test
    testImplementation 'io.rest-assured:rest-assured:5.5.0'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // kafka
//    implementation 'org.springframework.kafka:spring-kafka:3.2.2'
//    implementation 'org.apache.kafka:kafka-clients:3.8.0'
//    implementation 'org.apache.kafka:kafka_2.13:3.8.0'

}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.twentyone.steachserver.SteachServerApplication'
        )
    }
}


tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

task copyYML(type: Copy) {
    copy {
        from './steach-server-submodule'
        include "*.yml"
        into 'src/main/resources'
    }
    copy {
        from './steach-server-submodule/test'
        include "*.yml"
        into 'src/test/resources'
    }
}

build {
    dependsOn copyYML
}

test {
//    dependsOn copyYML
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// sonar라는 작업에 의존성을 넣어줌.
// ci/cd 시에 이미 앞에서 빌드하면서 자동으로 테스트가 됨.
//tasks.named('sonar') {
//    dependsOn tasks.named('test')
//    dependsOn tasks.named('jacocoTestReport')
//}


// 분리된 설정 파일 포함
apply from: 'querydsl.gradle'
apply from: 'jacoco.gradle'
apply from: 'sonarqube.gradle'
